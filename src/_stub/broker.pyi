from typing import Optional
from emitter import Emitter
from consumer import Consumer

class Broker:
    def __init__(self, timeout_ms: int = ...) -> None: ...
    def register_emitter(self, emitter: Emitter | list[Emitter]) -> None: ...
    def register_consumer(self, consumer: Consumer | list[Consumer]) -> None: ...
    async def collect_emit(self, uuid: str) -> None: ...
